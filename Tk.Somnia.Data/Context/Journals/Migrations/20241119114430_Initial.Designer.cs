// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tk.Somnia.Data.Context.Journals;

#nullable disable

namespace Tk.Somnia.Data.Context.Journals.Migrations
{
    [DbContext(typeof(JournalDbContext))]
    [Migration("20241119114430_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tk.Somnia.Model.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Entities", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Tk.Somnia.Model.Journal", b =>
                {
                    b.HasBaseType("Tk.Somnia.Model.Entity");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Journals", (string)null);
                });

            modelBuilder.Entity("Tk.Somnia.Model.JournalEntry", b =>
                {
                    b.HasBaseType("Tk.Somnia.Model.Entity");

                    b.Property<string>("Contents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(100)");

                    b.HasIndex("Date")
                        .IsUnique()
                        .HasFilter("[Date] IS NOT NULL");

                    b.HasIndex("ParentId");

                    b.ToTable("JournalEntries", (string)null);
                });

            modelBuilder.Entity("Tk.Somnia.Model.Journal", b =>
                {
                    b.HasOne("Tk.Somnia.Model.Entity", null)
                        .WithOne()
                        .HasForeignKey("Tk.Somnia.Model.Journal", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tk.Somnia.Model.JournalEntry", b =>
                {
                    b.HasOne("Tk.Somnia.Model.Entity", null)
                        .WithOne()
                        .HasForeignKey("Tk.Somnia.Model.JournalEntry", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tk.Somnia.Model.Journal", "Parent")
                        .WithMany("Entries")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Tk.Somnia.Model.Journal", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
